# Check the build status for the nighly builder, release or pull request

name: CSE7766 build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('platformio.ini') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: |
        pio ci -c platformio.ini --lib="lib/CSE7766" --lib="lib/NWifiBot" --keep-build-dir --build-dir firmware --board=esp12e
        ls -lah firmware
      env:
        PLATFORMIO_CI_SRC: src/
    - name: Set Version ENV
      run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        commitish: master
    - name: Upload Release Asset
      id: upload-release-asset-basic
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: firmware/.pio/build/basic/firmware.bin
        asset_name: basic.bin
        asset_content_type: application/octet-stream
    - name: Upload Release Asset
      id: upload-release-asset-nbot 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: firmware/.pio/build/nbot/firmware.bin
        asset_name: nbot.bin
        asset_content_type: application/octet-stream
#
#    - uses: actions/setup-node@v2
#      with:
#        node-version: '14'
#    - name: Cache Node
#      uses: actions/cache@v2
#      with:
#        path: ~/.npm
#        key: ${{ runner.os }}-${{ hashFiles('code/package-lock.json', 'code/package.json') }}
#    - name: WebUI tests
#      run: |
#        ./ci_install.sh webui
#        ./ci_script.sh webui
